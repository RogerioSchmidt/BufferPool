Universidade Federal da Fronteira Sul – UFFS 
Curso: Ciência da Computação
Componente Curricular: Banco de Dados II
Professor: Dr. Denio Duarte
Alunos: Natan J. Mai, Ricardo Zanuzzo, Rogerio T. Schmidt

Introdução
	Trabalho desenvolvido para o componente curricular de Banco de Dados II. Nele são criado quatro tabelas (carro, modelo, fabricante e proprietário).
	Na sua execução, é apresentado o seguinte menu inicial, o qual é auto explicativo:
	
	-> Tabela Carro
	-> Tabela Modelo 
	-> Tabela Fabricante 
	-> Tabela Proprietário
	
	Dentre as tabelas acima, digite: 
	1 - Inserir valores
	2 - Imprimir valores
	3 - Excluir valores
	4 - Sair

A opção 1 permite a inserção de valores nas tabelas citadas, a qual deve ser selecionada.
A opção 2 permite a impressão das tabelas citadas, a qual deve ser selecionada.
A opção 3 exclui todas as tuplas da tabela escolhida

Sobre o dicionário de dados e o esquema:
	Por definição, o dicionário de dados está no aquivo fs_object.dat e o esquema em fs_schema.dat, os mesmos serão criados no diretório raiz da pasta dos fontes.
	São carregados na memória pelas funçõe leObjeto(nTabela) e leSchema(objeto) e tem a seguinte estrutura:

	struct fs_objects { // Estrutura usada para carregar fs_object.dat
		char nome[20];
		int cod;
		char nArquivo[20];
		int qtdCampos;
	};

	typedef struct tp_table{ // Estrutura usada para carregar fs_schema.dat
		char nome[TAMANHO_NOME_CAMPO];	
		char tipo;						
		int tam;						
		struct tp_table *next;	
	}tp_table;

	O arquivo fs_object.dat organiza-se da seguinte forma:
		20B que representam o nome da tabela; 
		1B que representam o código da tabela;
		20B que representa o nome do arquivo onde estão as tuplas da tabela;
		4B que representa a quantidade de campos da tabela.


	O arquivo fs_schema.dat organiza-se da seguinte forma:
		4B que representam o codigo da tabela; (Código que representa a tabela em fs_objects.dat)
		40B que representam o nome do campo;
		1B que representa o tipo do campo;
		4B que representa o tamanho do campo.

	
Da compilação:

	$ gcc *.c -o prog -Wall
	$ ./prog





